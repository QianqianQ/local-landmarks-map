{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/geolocation.service\";\nimport * as i2 from \"@angular/common\";\nexport let NavbarComponent = /*#__PURE__*/(() => {\n  class NavbarComponent {\n    constructor(geolocationService) {\n      this.geolocationService = geolocationService;\n      this.locationFound = new EventEmitter();\n      this.refreshRequested = new EventEmitter();\n      this.errorOccurred = new EventEmitter();\n      this.landmarkCount = 0;\n      this.isLocating = false;\n      this.geolocationService.isLocating$.subscribe(isLocating => {\n        this.isLocating = isLocating;\n      });\n    }\n    onLocateClick() {\n      this.geolocationService.getCurrentPosition().subscribe({\n        next: position => {\n          this.locationFound.emit(position);\n        },\n        error: error => {\n          this.errorOccurred.emit(`Unable to get your location: ${error.message}`);\n        }\n      });\n    }\n    onRefreshClick() {\n      this.refreshRequested.emit();\n    }\n    updateLandmarkCount(count) {\n      this.landmarkCount = count;\n    }\n    static {\n      this.ɵfac = function NavbarComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NavbarComponent)(i0.ɵɵdirectiveInject(i1.GeolocationService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: NavbarComponent,\n        selectors: [[\"app-navbar\"]],\n        outputs: {\n          locationFound: \"locationFound\",\n          refreshRequested: \"refreshRequested\",\n          errorOccurred: \"errorOccurred\"\n        },\n        decls: 10,\n        vars: 4,\n        consts: [[1, \"navbar\", \"navbar-dark\", \"bg-dark\", \"border-bottom\"], [1, \"container-fluid\"], [1, \"navbar-brand\", \"mb-0\", \"h1\"], [1, \"fas\", \"fa-map-marker-alt\", \"me-2\"], [1, \"d-flex\", \"align-items-center\"], [\"title\", \"Find my location\", 1, \"btn\", \"btn-outline-secondary\", \"me-2\", 3, \"click\", \"disabled\"], [1, \"fas\", 3, \"ngClass\"], [1, \"badge\", \"bg-secondary\"]],\n        template: function NavbarComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"span\", 2);\n            i0.ɵɵelement(3, \"i\", 3);\n            i0.ɵɵtext(4, \" Local Landmarks Map \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\", 4)(6, \"button\", 5);\n            i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_6_listener() {\n              return ctx.onLocateClick();\n            });\n            i0.ɵɵelement(7, \"i\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"span\", 7);\n            i0.ɵɵtext(9);\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"disabled\", ctx.isLocating);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngClass\", ctx.isLocating ? \"fa-spinner fa-spin\" : \"fa-location-arrow\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate2(\"\", ctx.landmarkCount, \" landmark\", ctx.landmarkCount !== 1 ? \"s\" : \"\", \"\");\n          }\n        },\n        dependencies: [i2.NgClass],\n        encapsulation: 2\n      });\n    }\n  }\n  return NavbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}